/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/bookingcom/shipper/pkg/apis/shipper/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ShipmentLister helps list Shipments.
type ShipmentLister interface {
	// List lists all Shipments in the indexer.
	List(selector labels.Selector) (ret []*v1.Shipment, err error)
	// Shipments returns an object that can list and get Shipments.
	Shipments(namespace string) ShipmentNamespaceLister
	ShipmentListerExpansion
}

// shipmentLister implements the ShipmentLister interface.
type shipmentLister struct {
	indexer cache.Indexer
}

// NewShipmentLister returns a new ShipmentLister.
func NewShipmentLister(indexer cache.Indexer) ShipmentLister {
	return &shipmentLister{indexer: indexer}
}

// List lists all Shipments in the indexer.
func (s *shipmentLister) List(selector labels.Selector) (ret []*v1.Shipment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Shipment))
	})
	return ret, err
}

// Shipments returns an object that can list and get Shipments.
func (s *shipmentLister) Shipments(namespace string) ShipmentNamespaceLister {
	return shipmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ShipmentNamespaceLister helps list and get Shipments.
type ShipmentNamespaceLister interface {
	// List lists all Shipments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.Shipment, err error)
	// Get retrieves the Shipment from the indexer for a given namespace and name.
	Get(name string) (*v1.Shipment, error)
	ShipmentNamespaceListerExpansion
}

// shipmentNamespaceLister implements the ShipmentNamespaceLister
// interface.
type shipmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Shipments in the indexer for a given namespace.
func (s shipmentNamespaceLister) List(selector labels.Selector) (ret []*v1.Shipment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Shipment))
	})
	return ret, err
}

// Get retrieves the Shipment from the indexer for a given namespace and name.
func (s shipmentNamespaceLister) Get(name string) (*v1.Shipment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("shipment"), name)
	}
	return obj.(*v1.Shipment), nil
}
